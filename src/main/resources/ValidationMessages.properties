#\u30C7\u30D5\u30A9\u30EB\u30C8\u306E\u5165\u529B\u30C1\u30A7\u30C3\u30AF\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u5909\u66F4\u3059\u308B\u5834\u5408\u306F\u3001\u30B3\u30E1\u30F3\u30C8\u30A2\u30A6\u30C8\u3092\u5916\u3057\u3066\u5024\u3092\u5909\u66F4\u3057\u3066\u304F\u3060\u3055\u3044\u3002

#javax.validation.constraints.AssertFalse.message = must be false
#javax.validation.constraints.AssertTrue.message  = must be true
#javax.validation.constraints.DecimalMax.message  = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
#javax.validation.constraints.DecimalMin.message  = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
#javax.validation.constraints.Digits.message      = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
#javax.validation.constraints.Future.message      = must be in the future
#javax.validation.constraints.Max.message         = must be less than or equal to {value}
#javax.validation.constraints.Min.message         = must be greater than or equal to {value}
#javax.validation.constraints.NotNull.message     = may not be null
#javax.validation.constraints.Null.message        = must be null
#javax.validation.constraints.Past.message        = must be in the past
#javax.validation.constraints.Pattern.message     = must match "{regexp}"
#javax.validation.constraints.Size.message        = size must be between {min} and {max}

#org.hibernate.validator.constraints.CreditCardNumber.message        = invalid credit card number
#org.hibernate.validator.constraints.EAN.message                   = invalid {type} barcode
#org.hibernate.validator.constraints.Email.message                   = not a well-formed email address
#org.hibernate.validator.constraints.Length.message                  = length must be between {min} and {max}
#org.hibernate.validator.constraints.LuhnCheck.message               = The check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
#org.hibernate.validator.constraints.Mod10Check.message              = The check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
#org.hibernate.validator.constraints.Mod11Check.message              = The check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
#org.hibernate.validator.constraints.ModCheck.message                = The check digit for ${validatedValue} is invalid, ${modType} checksum failed
#org.hibernate.validator.constraints.NotBlank.message                = may not be empty
#org.hibernate.validator.constraints.NotEmpty.message                = may not be empty
#org.hibernate.validator.constraints.ParametersScriptAssert.message  = script expression "{script}" didn't evaluate to true
#org.hibernate.validator.constraints.Range.message                   = must be between {min} and {max}
#org.hibernate.validator.constraints.SafeHtml.message                = may have unsafe html content
#org.hibernate.validator.constraints.ScriptAssert.message            = script expression "{script}" didn't evaluate to true
#org.hibernate.validator.constraints.URL.message                     = must be a valid URL

#org.hibernate.validator.constraints.br.CNPJ.message                 = invalid Brazilian corporate taxpayer registry number (CNPJ)
#org.hibernate.validator.constraints.br.CPF.message                  = invalid Brazilian individual taxpayer registry number (CPF)
#org.hibernate.validator.constraints.br.TituloEleitoral.message      = invalid Brazilian Voter ID card number
